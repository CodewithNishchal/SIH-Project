<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Alert - Marine Crisis Response</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
    <script src="https://unpkg.com/@turf/turf@6/turf.min.js"></script>
    <style>
        :root {
            --bg-primary: #f0f9ff;
            --bg-secondary: #ffffff;
            --text-primary: #0c4a6e;
            --text-secondary: #3c8db4;
            --border-color: rgba(14, 116, 144, 0.2);
            --shadow-sm: 0 2px 4px rgba(12, 74, 110, 0.05);
            --shadow-md: 0 8px 16px rgba(12, 74, 110, 0.1);
            --accent-blue: #0ea5e9;
            --accent-blue-dark: #0369a1;
            --accent-green: #14b8a6;
            --status-critical: #f43f5e;
            --border-radius-md: 12px;
            --border-radius-lg: 16px;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            color: var(--text-primary);
        }

        .card {
            background-color: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-lg);
            padding: 1.5rem;
            box-shadow: var(--shadow-sm);
        }

        .btn {
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius-md);
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            box-shadow: var(--shadow-sm);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-critical {
            background: linear-gradient(135deg, var(--status-critical), #be123c);
        }

        .btn-secondary {
            background-color: var(--bg-secondary);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        .btn-social {
            background-color: #1DA1F2;
            /* Twitter blue */
        }

        .btn-social:hover {
            background-color: #0c85d0;
        }

        /* New style for Meta/Facebook button */
        .btn-meta {
            background-color: #1877F2;
            /* Facebook blue */
        }

        .btn-meta:hover {
            background-color: #145cb3;
        }


        /* Custom form styles */
        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--accent-blue-dark);
        }

        .form-input,
        .form-textarea,
        .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-md);
            background-color: #f8fafc;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-input:focus,
        .form-textarea:focus,
        .form-select:focus {
            outline: none;
            border-color: var(--accent-blue);
            box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);
        }

        .form-input[disabled] {
            background-color: #e2e8f0;
            cursor: not-allowed;
        }

        .checkbox-label {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-md);
            cursor: pointer;
            transition: all 0.2s;
        }

        .checkbox-label:hover {
            background-color: #f0f9ff;
            border-color: var(--accent-blue);
        }

        .checkbox-label input:checked~.checkbox-icon {
            background-color: var(--accent-blue);
            border-color: var(--accent-blue);
            color: white;
        }

        .checkbox-icon {
            width: 1.25rem;
            height: 1.25rem;
            border: 2px solid var(--border-color);
            border-radius: 4px;
            margin-right: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s;
            flex-shrink: 0;
        }

        #map-container {
            height: 400px;
            border-radius: var(--border-radius-lg);
            overflow: hidden;
            border: 1px solid var(--border-color);
        }
    </style>
</head>

<body>

    <div class="container mx-auto p-4 md:p-8 max-w-7xl">
        <!-- Header -->
        <header class="mb-8">
            <a href="#" class="text-sm text-cyan-700 hover:text-cyan-500 transition-colors">
                <i class="fas fa-arrow-left mr-2"></i>Back to Report Analysis
            </a>
            <h1 class="text-4xl font-bold text-cyan-900 mt-2">Create New Alert</h1>
            <p class="text-cyan-700">Dispatch critical information to relevant agencies.</p>
        </header>

        <!-- Main Content Grid: Equal 2-column layout (lg:grid-cols-2) -->
        <main class="grid grid-cols-1 lg:grid-cols-2 gap-8">

            <!-- Left Column: Form (lg:col-span-1) -->
            <form class="lg:col-span-1 card">
                <div class="space-y-6">
                    <div>
                        <label class="form-label">Case ID</label>
                        <input type="text" value="#MCR-2025-0927" disabled class="form-input">
                    </div>

                    <div>
                        <label for="coordinates" class="form-label">Incident Coordinates</label>
                        <input id="coordinates" type="text" value="18.9°N, 72.8°E" disabled class="form-input">
                    </div>

                    <div>
                        <label for="alert-type" class="form-label">Alert Type</label>
                        <select id="alert-type" class="form-select">
                            <option>Oil Spill</option>
                            <option>Vessel Distress</option>
                            <option>Security Threat</option>
                            <option>Weather Hazard</option>
                        </select>
                    </div>

                    <div>
                        <label for="impact-time" class="form-label">Estimated Impact Time</label>
                        <input id="impact-time" type="text" value="18 Hours to Landfall (Alibaug)" disabled
                            class="form-input">
                    </div>

                    <div>
                        <label for="radius" class="form-label">Alert Radius (Nautical Miles)</label>
                        <div class="flex items-center gap-4">
                            <input id="radius" type="range" min="5" max="100" value="50"
                                class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
                            <span id="radius-value" class="font-bold text-cyan-800 bg-cyan-50 py-1 px-3 rounded-md">50
                                NM</span>
                        </div>
                    </div>

                    <div>
                        <label class="form-label">Target Agencies</label>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
                            <label class="checkbox-label">
                                <input type="checkbox" class="sr-only" checked>
                                <span class="checkbox-icon"><i class="fas fa-check text-xs"></i></span>
                                <span>Indian Coast Guard</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" class="sr-only" checked>
                                <span class="checkbox-icon"><i class="fas fa-check text-xs"></i></span>
                                <span>Environmental Agency</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" class="sr-only">
                                <span class="checkbox-icon"><i class="fas fa-check text-xs"></i></span>
                                <span>Port Authority of Mumbai</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" class="sr-only" checked>
                                <span class="checkbox-icon"><i class="fas fa-check text-xs"></i></span>
                                <span>Fisheries Department</span>
                            </label>
                        </div>
                    </div>

                    <div>
                        <label for="priority" class="form-label">Priority Level</label>
                        <select id="priority" class="form-select">
                            <option>Urgent</option>
                            <option>High</option>
                            <option>Routine</option>
                        </select>
                    </div>

                    <div>
                        <label for="message" class="form-label">Message / Instructions <span
                                class="text-xs font-normal text-cyan-500">(AI Generated)</span></label>
                        <textarea id="message" rows="6"
                            class="form-textarea">CRITICAL ALERT: Coastal Flooding Risk at 18.9°N, 72.8°E
                            AI-based hydrodynamic models predict significant coastal flooding near Alibaug within the next 18 hours due to an
                            incoming surge event.
                            ACTION REQUIRED:
                            - Immediate deployment of flood barriers and sandbag reinforcements along vulnerable shoreline zones.
                            - Mobilize emergency response teams to high-risk areas for evacuation support and infrastructure protection.
                            - Issue advisories to all marine and coastal traffic to avoid the designated alert radius.
                            - Activate local shelters and ensure communication lines remain open for real-time updates.
</textarea>
                    </div>
                </div>
                <div class="mt-8 pt-6 border-t border-gray-200 flex justify-end gap-4">
                    <button type="button" class="btn btn-secondary">Cancel</button>

                    <!-- UPDATED: Changed to <a> tag with alert and navigation -->
                    <a href="/users/analyst/create-alert" class="btn btn-critical" onclick="alert('Alert Sent Successfully!');">
                        <i class="fas fa-paper-plane"></i> Send Alert
                    </a>
                </div>
            </form>

            <!-- Right Column: Map and Socials (lg:col-span-1) -->
            <div class="lg:col-span-1 grid grid-rows-[3fr,2fr] gap-8">
                <!-- Map -->
                <div class="card">
                    <h2 class="text-xl font-bold text-cyan-800 mb-4">Alert Visualization</h2>
                    <div id="map-container"></div>
                    <p class="text-sm text-cyan-600 mt-4 text-center">Map shows incident location and selected alert
                        radius.</p>
                </div>
                <!-- Socials -->
                <div class="card">
                    <h2 class="text-xl font-bold text-cyan-800 mb-4">Post to Social Media</h2>
                    <div class="space-y-4">
                        <div>
                            <label for="social-post" class="form-label">Post Content (max 280 chars)</label>
                            <textarea id="social-post" rows="4" class="form-textarea"
                                maxlength="280">🚨 MARINE ALERT: Urgent oil spill response initiated at 18.9°N, 72.8°E. Oil tanker 'V-78B' incident reported. Agencies deploying booms. Please avoid the area. #MarineCrisis #OilSpill #Alibaug</textarea>
                        </div>

                        <!-- NEW BUTTON: Post to Facebook/Meta -->
                        <button type="button" class="btn btn-meta w-full" onclick="alert('Social media post sent!')"><i
                                class="fab fa-facebook-f"></i> Post to
                            Meta</button>

                        <button type="button" class="btn btn-social w-full"
                            onclick="alert('Social media post sent!')"><i class="fab fa-twitter"></i> Post to
                            X (Twitter)</button>
                    </div>
                </div>
            </div>

        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Mapbox token is required for the map to work.
            mapboxgl.accessToken = 'pk.eyJ1IjoibWFqZXN0aWMxMDAiLCJhIjoiY21mczYyaWV1MGhiZTJpcG9reWZ5NWQ4diJ9.21rREeVNLvNnEqrGoSH-0Q';

            const incidentCoords = [72.8, 18.9];
            const radiusSlider = document.getElementById('radius');
            const radiusValue = document.getElementById('radius-value');
            const messageTextarea = document.getElementById('message');
            const socialPostTextarea = document.getElementById('social-post');

            const map = new mapboxgl.Map({
                container: 'map-container',
                style: 'mapbox://styles/mapbox/streets-v12',
                center: incidentCoords,
                zoom: 7
            });

            function updateRadiusCircle(radiusNM) {
                // 1 nautical mile is approx 1.852 kilometers
                const radiusKM = radiusNM * 1.852;
                // Incident location is 18.9°N, 72.8°E (Mumbai coast area)
                const center = turf.point(incidentCoords);
                const options = {
                    steps: 80,
                    units: 'kilometers'
                };
                // Calculate the GeoJSON polygon for the circle
                const circle = turf.circle(center, radiusKM, options);

                // Update or create the Mapbox source and layers for the circle
                if (map.getSource('alert-radius')) {
                    map.getSource('alert-radius').setData(circle);
                } else {
                    map.addSource('alert-radius', {
                        type: 'geojson',
                        data: circle
                    });
                    map.addLayer({
                        id: 'alert-radius-fill',
                        type: 'fill',
                        source: 'alert-radius',
                        paint: {
                            'fill-color': '#f43f5e',
                            'fill-opacity': 0.2
                        }
                    });
                    map.addLayer({
                        id: 'alert-radius-outline',
                        type: 'line',
                        source: 'alert-radius',
                        paint: {
                            'line-color': '#f43f5e',
                            'line-width': 2
                        }
                    });
                }
            }

            map.on('load', () => {
                // Add incident marker
                new mapboxgl.Marker({
                    color: "#be123c",
                    scale: 1.2
                })
                    .setLngLat(incidentCoords)
                    .addTo(map);

                // Initial radius circle load
                const initialRadius = parseInt(radiusSlider.value, 10);
                updateRadiusCircle(initialRadius);
            });


            // Listener for the radius slider input
            radiusSlider.addEventListener('input', (e) => {
                const radius = parseInt(e.target.value, 10);
                radiusValue.textContent = `${radius} NM`;
                updateRadiusCircle(radius);
            });

            // Social media post generation logic
            function generateSocialPost() {
                const alertType = document.getElementById('alert-type').value;
                const message = messageTextarea.value.split('\n')[0].trim(); // Take the first line
                const shortMessage = `🚨 ${alertType.toUpperCase()} ALERT: ${message}`;

                // Truncate and add relevant hashtags.
                const hashtags = `#MarineCrisis #${alertType.replace(/\s/g, '')} #Alibaug`;
                const postBase = shortMessage.length > 270 ? shortMessage.substring(0, 270) : shortMessage;
                const fullPost = `${postBase} ${hashtags}`;

                socialPostTextarea.value = fullPost.substring(0, 280);
            }

            // Generate the social post when the alert type or message changes
            document.getElementById('alert-type').addEventListener('change', generateSocialPost);
            messageTextarea.addEventListener('input', generateSocialPost);

            // Initial generation on page load
            generateSocialPost();
        });
    </script>

</body>

</html>